var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SphericalGraphEmbedding","category":"page"},{"location":"#SphericalGraphEmbedding","page":"Home","title":"SphericalGraphEmbedding","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SphericalGraphEmbedding.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SphericalGraphEmbedding]","category":"page"},{"location":"#SphericalGraphEmbedding.acc_proj_power_method-Tuple{SparseArrays.SparseMatrixCSC{Int64, Int64}, Matrix{Float64}, Int64, Float64}","page":"Home","title":"SphericalGraphEmbedding.acc_proj_power_method","text":"acc_proj_power_method(A::SparseMatrixCSC{Int64,Int64}, X::Array{Float64,2}, n_it::Int64, t::Float64)\n\nRuns the accelarated projected power iteration on the modularity matrix.\n\nArguments\n\nA::SparseMatrixCSC{Int64,Int64} sparse graph adjacency matrix.\nX::Array{Float64,2} initial matrix.\nn_it::Int64 maximum number of iterations.\nt::Float64 tolerance on relative variation of consecutive objective values.\n\nOutput\n\n`X::Array{Float64,2}: approximate stationary matrix of the iteration.\n\n\n\n\n\n","category":"method"}]
}
